%%%%%%%%%%%%%%%%%%
% Main functions %
% ============== %
%%%%%%%%%%%%%%%%%%
function ExtractTimeTrace(hObject,varargin)
	
	% Create main figure
	hFig = figure(...
	  	'Units','pixels',...
		'Tag','hETT',...
		'MenuBar','none',...
		'Toolbar','none',...
		'NumberTitle','off',...
		'Visible','off',...
		'Position',[0 0 1 1],...
		'Resize','off',...
		'Colormap',hot);
	drawExtractTimeTraceContent(hFig);
	
	% Load Data to GUI
	LoadNewData;
	
	% Set window visible
	movegui(hFig,'north');
	set(hFig,'Visible','on');
	
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Draw GUI content functions %
% ========================== %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function drawExtractTimeTraceContent(hObject,varargin)
	
	% Delete previous content
	delete(get(hObject,'Children'));
	
	% Set name of window
	set(hObject,'Name','SMATool - Extract Time Trace From ROI (ETT)');
	
	% Dimensions
	pw = 450; axh = 450 - 20;
	
	bw = 90; bh = 25;
	
	sh = 30;
	
	th = 20;
	
	brh = 47;
	
	roiSelH = 20 + axh + sh + 10;
	dataInfoH = 20 + 7*(th + 5) + 5;
	
	projAxH = 225;
	filtH = 20 + 8*(th+5) + 5;
	
	rH = brh + 10 + filtH + 10 + projAxH + 10 + projAxH + 20;
	lH = brh + 10 + dataInfoH + 10 + roiSelH + 20;
	
	h = max(rH,lH);
	w = 20 + pw + 20 + pw + 20;
	
	if (rH > lH)
		dataInfoH = dataInfoH + (rH-lH);
	elseif (rH < lH)
		filtH = filtH + (lH-rH);
	end
	
	yr1 = h - (20 + projAxH);
	yr2 = yr1 - (10 + projAxH);
	yr3 = yr2 - (10 + filtH);
	
	yl1 = h - (20 + roiSelH);
	yl2 = yl1 - (10 + dataInfoH);
	
	x1 = 20;
	x2 = x1 + pw + 20;
	
	set(hObject,'Position',[0 0 w h]);
	
	% Button Row Panel
	hButtonPanel = uibuttongroup(...
		'Parent',hObject,...
		'Tag','ETT_panel_buttonRow',...
		'Units','pixels',...
		'BackgroundColor',get(hObject,'Color'),...
		'visible','on',...
		'BorderType','none',...
		'Position',[0 0 w brh]);
	uiButtonRowPanel(hButtonPanel);
	
	% ROI Selection Panel
	hROISelectionPanel = uibuttongroup(...
		'Parent',hObject,...
		'Tag','ETT_panel_roiSelection',...
		'Title','Select Region Of Interest (ROI)',...
		'FontSize',10,...
		'Units','pixels',...
		'BackgroundColor',get(hObject,'Color'),...
		'Position',[x1 yl1 pw roiSelH]);
	uiROISelectionPanel(hROISelectionPanel);
	
	% Time Trace Extraction Info Panel
	hDataInfoPanel = uibuttongroup(...
		'Parent',hObject,...
		'Tag','ETT_panel_dataInfo',...
		'Title','Time Trace Extraction Info',...
		'FontSize',10,...
		'Units','pixels',...
		'BackgroundColor',get(hObject,'Color'),...
		'Position',[x1 yl2 pw dataInfoH]);
	uiDataInfoPanel(hDataInfoPanel);
	
	% Horizontal Projection Panel
	hHProjPanel = uibuttongroup(...
		'Parent',hObject,...
		'Tag','ETT_panel_hProj',...
		'Title','Horizontal projection of ROI',...
		'FontSize',10,...
		'Units','pixels',...
		'BackgroundColor',get(hObject,'Color'),...
		'Position',[x2 yr1 pw projAxH]);
	uiHorizontalProjectionPanel(hHProjPanel);
	
	% Vertical Projection Panel
	hVProjPanel = uibuttongroup(...
		'Parent',hObject,...
		'Tag','ETT_panel_hProj',...
		'Title','Vertical projection of ROI',...
		'FontSize',10,...
		'Units','pixels',...
		'BackgroundColor',get(hObject,'Color'),...
		'Position',[x2 yr2 pw projAxH]);
	uiVerticalProjectionPanel(hVProjPanel);
	
	% Filtering Panel
	hFilteringPanel = uibuttongroup(...
		'Parent',hObject,...
		'Tag','ETT_panel_hProj',...
		'Title','Filtering',...
		'FontSize',10,...
		'Units','pixels',...
		'BackgroundColor',get(hObject,'Color'),...
		'Position',[x2 yr3 pw filtH]);
	uiFilterPanel(hFilteringPanel);
	
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Panel construction functions %
% ============================ %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function uiButtonRowPanel(hObject,eventdata,varargin)
	
	% Dimensions
	pos = get(hObject,'Position');
	
	w = pos(3);
	h = pos(4);
	
	bw = 90; bh = 25;
	
	% Close button
	uicontrol(...
		'Parent',hObject,...
		'Units','pixels',...
		'Style','pushbutton',...
		'String','Close',...
		'Position',[w-(bw+20) 10 bw bh],...
		'Callback',{@CloseButton});
		
	% Load TIF
	uicontrol(...
		'Parent',hObject,...
		'Units','pixels',...
		'Style','pushbutton',...
		'TooltipString','Load new file.',...
		'String','Load new TIF',...
		'Position',[w-(3*bw+20) 10 2*bw bh],...
		'Callback',{@LoadTIFButton});
	
	% Extract Time Trace button
	uicontrol(...
		'Parent',hObject,...
		'Units','pixels',...
		'Style','pushbutton',...
		'TooltipString','Extracts a Time Trace from the channel in the selected ROI.',...
		'String','Extract Time Trace',...
		'Position',[20 10 2*bw bh],...
		'Callback',{@ExtractTimeTraceButton});

	% Extract Plots button
	uicontrol(...
		'Parent',hObject,...
		'Units','pixels',...
		'Style','pushbutton',...
		'TooltipString','Dump all plots into a new window.',...
		'String','Extraxt Plots',...
		'Visible','off',...
		'Position',[20+bw 10 bw bh],...
		'Callback',{@ExtractPlotsButton});
	
end
function uiROISelectionPanel(hObject,eventdata,varargin)
	
	% Dimensions
	pos = get(hObject,'Position');
	
	w = pos(3);
	h = pos(4);
	
	axw = 450 - 20; axh = 450 - 20;
	
	bw = 90; bh = 25;
	
	sh = 30;
	
	x1 = 10;
	x2 = x1 + axw;
	
	y1 = h - (20 + axh);
	y2 = y1 - (sh);
	y3 = y2 - (sh);
	
	% Calculate Variables
	stackSize = 2;
	frameNumber = 1;
	original = rand(10);
	current = original;
	
	% ROI Selection Axes
	hAx = axes(...
		'Parent',hObject,...
		'Units','pixels',...
		'Position',[x1 y1 axw axh],...
		'Visible','on');
	hImsc = imagesc(current,[min(min(current)) max(max(current))]);
	set(hImsc,'Parent',hAx,...
		'Tag','ett_imgsc_roiSelection',...
		'CDataMapping','scaled',...
		'Visible','on');
	axis(hAx,'off','tight','xy');
	line(...
		'Parent',hAx,...
		'XData',[0 0],...
		'YData',[0 0],...
		'Color','b',...
		'Tag','ett_orig_rrLine');
	l1 = legend(hAx,...
		'Robust Regression');
	set(l1,...
		'Location','NorthEast',...
		'Box','off',...
		'Color','none',...
		'TextColor',[1 1 1]);
	
	% Add selection tool to main axes
	so = size(current);
	selection = round([.4*so(2) .4*so(1) .2*so(2) .2*so(1)]);
	
	roiSelTool = imrect(hAx,selection);
	addNewPositionCallback(roiSelTool,@ROISelectionChange);	
	
	fcn = makeConstrainToRectFcn('imrect',[1 so(2)],[1 so(1)]);
	setPositionConstraintFcn(roiSelTool,fcn);
	clear so;
	
	% Scroll bar and Label
	uicontrol(...	% Scrollbar
		'Parent',hObject,...
		'Tag','ett_scrollbar_frameNumber',...
		'Style','slider',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',11,...
		'Max',stackSize,...
		'Min',1,...
		'SliderStep',[1 10] / (stackSize-1),...
		'Value',1,...
	   'Position',[x1 y2 axw sh],...
		'Callback',{@ScrollImage},...
		'Enable','on');
	uicontrol(...	% Label
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','center',...
		'String','Change current frame number by using scrollbar',...
	   'Position',[x1 y2-5 axw 20]);
	uicontrol(...	% Label
		'Parent',hObject,...
		'Tag','ett_label_FrameNumber',...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor','black',...
		'ForegroundColor','white',...
		'FontSize',10,...
		'HorizontalAlignment','center',...
		'String',sprintf('Current frame: %g',frameNumber),...
	   'Position',[x1+(axw-120) y1 120 18]);
	
	% Store gui data
	data.ett.stackSize = stackSize;
	data.ett.frameNumber = frameNumber;
	data.ett.original = original;
	data.ett.current = current;
	
	data.ett.roiSelTool = roiSelTool;
	
	data.ett.selection = selection;
	
	guidata(findobj('Tag','hSMAT'),data);
	
end
function uiDataInfoPanel(hObject,eventdata,varargin)
	
	% Dimensions
	pos = get(hObject,'Position');
	
	w = pos(3);
	h = pos(4);
	
	bw = 150; bh = 25;
	
	lw = 100; lh = 20;
	
	tw = round(w/2) - (10 + lw + 5 + 5);
	
	x1 = 10;
	x2 = x1 + lw + 5;
	x3 = round(w/2)+5;
	x4 = x3 + lw + 5;
	
	y1 = h - (20 + lh);
	y2 = y1 - (lh + 5);
	y3 = y2 - (lh + 5);
	y4 = y3 - (lh + 5);
	y5 = y4 - (lh + 5);
	y6 = y5 - (lh + 5);
	y7 = y6 - (lh + 5);
	
	% Load Data
	data = guidata(findobj('Tag','hSMAT'));
	
%	filename = data.ett.filename;
	original = data.ett.original;
	stackSize = data.ett.stackSize;
	selection = data.ett.selection;
	
	% Calculate variables
	filename = '-';
	chPos = zeros(3,2);
	
	% LABEL - Filename
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','Filename:',...
	   'Position',[x1 y1 lw lh]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String',filename,...
	   'Position',[x2 y1 w-(x2+10) lh],...
		'Tag','ett_label_filename');
	
	% LABEL - Stack Size
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','Stack Size:',...
	   'Position',[x1 y2 lw lh]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String',sprintf('%g',stackSize),...
	   'Position',[x2 y2 tw lh],...
		'Tag','ett_label_stackSize');
	
	% LABEL - Frame Size
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','Frame Size:',...
	   'Position',[x1 y3 lw lh]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String',sprintf('[%g,%g]',size(original)),...
	   'Position',[x2 y3 tw lh],...
		'Tag','ett_label_frameSize');
	
	% LABEL - ROI Data
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','ROI Data:',...
	   'Position',[x1 y5 lw 2*lh+5]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String',sprintf('x = %g\t\ty = %g\nw = %g\t\th = %g',selection),...
	   'Position',[x2 y5 tw 2*lh+5],...
		'Tag','ett_label_roi');
	
	% LABEL - Channel Data
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','Channel Data:',...
	   'Position',[x1 y7 lw 2*lh+5]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String',sprintf('Angle: %0.4g deg\nStart: x: %g\ty: %g',...
			chPos(3,1),...
			chPos(1,1),...
			chPos(2,1)),...
		'Tag','ett_label_channeldata',...
	   'Position',[x2 y7 tw 2*lh+5]);
	
	% LABEL - Channel Threshold
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','Channel Threshold:',...
	   'Position',[x3 y3 lw 2*lh+5],...
		'Enable','on');
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','70%',...
	   'Position',[x4 y3 tw 2*lh+5],...
		'Tag','ett_label_IntensityThreshold',...
		'Enable','on');
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',8,...
		'HorizontalAlignment','left',...
		'String','Change by dragging marker at right edge of projection axes.',...
	   'Position',[x3 y3-15 lw+tw+5 lh+10],...
		'Enable','on');
	
	% BUTTON - Show Channel Values
	uicontrol(...
		'Parent',hObject,...
		'Units','pixels',...
		'Style','pushbutton',...
		'String', 'Show Channel Values',...
		'Position',[w-(bw+10) 10+2*bh bw bh],...
		'Callback', {@ShowChannelValueButton},...
		'Enable','on');
	
	% BUTTON - Find Channel
	uicontrol(...
		'Parent',hObject,...
		'Units','pixels',...
		'Style','pushbutton',...
		'String', 'Find Channel',...
		'Position',[w-(bw+10) 10+bh bw bh],...
		'Callback', {@FindChannelButton},...
		'Enable','on');
	
	% BUTTON - Rotate Frame
	uicontrol(...
		'Parent',hObject,...
		'Units','pixels',...
		'Style','pushbutton',...
		'String', 'Rotate Frame (off)',...
		'Position',[w-(bw+10) 10 bw bh],...
		'Callback', {@RotateImageButton},...
		'Enable','on');
	
	% Store gui data
	data.ett.chPos = chPos;
	
	data.ett.toggleChannelValues = false;
	data.ett.rotate = false;
	
	guidata(findobj('Tag','hSMAT'),data);
	
end
function uiHorizontalProjectionPanel(hObject,eventdata,varargin)
	
	% Dimensions
	pos = get(hObject,'Position');
	
	w = pos(3);
	h = pos(4);
	
	axw = 450 - 20; axh = 225 - (20+10);
	
	% Load Data
	data = guidata(findobj('Tag','hSMAT'));
	
	current = data.ett.current;
	frame = data.ett.frameNumber;
	selection = data.ett.selection;
	
	% Horizontal Projection Axes
	hHProjAxes = axes(...
		'Parent',hObject,...
		'Units','pixels',...
		'Tag','ett_axes_HProj',...
		'Position',[10 10 axw axh],...
		'Visible','on',...
		'Color','none');
	mesh(hHProjAxes,...
		getROI(current,frame,selection),...
		'Tag','ett_plot_HProj',...
		'FaceColor','none');
	set(hHProjAxes,...
		'Tag','ett_axes_HProj',...
		'XLim',[1 selection(4)],...
		'YLim',[1 selection(3)],...
		'Color','none',...
		'DrawMode','fast');
	axis(hHProjAxes,'off');
	view(hHProjAxes,[-90 0]);
	
	% Add Intensity Threshold Selection Tool
	relIntTh = .7;
	hHSelAxes = axes(...
		'Parent',hObject,...
		'Tag','ett_HSelAxes',...
		'Units','pixels',...
		'Position',get(hHProjAxes,'Position'),...
		'Visible','on',...
		'Color','none',...
		'XLim',[1 100],...
		'YLim',[0 1]);
	axis(hHSelAxes,'off');
	line([1 100],[relIntTh relIntTh],...
		'Parent',hHSelAxes,...
		'Color','k',...
		'LineStyle',':',...
		'Tag','ett_selTool_Hth')
	hSelThH = impoint(hHSelAxes,[100 relIntTh]);
	setColor(hSelThH,'k');
	hConFcnH = makeConstrainToRectFcn('impoint',[100 100],[0 1]);
	setPositionConstraintFcn(hSelThH,hConFcnH);
	addNewPositionCallback(hSelThH,@IntensityThresholdChange);
	
	% Store gui data
	data.ett.relIntTh = relIntTh;
	data.ett.hSelThH = hSelThH;
	
	guidata(findobj('Tag','hSMAT'),data);
	
end
function uiVerticalProjectionPanel(hObject,eventdata,varargin)
	
	% Dimensions
	pos = get(hObject,'Position');
	
	w = pos(3);
	h = pos(4);
	
	axw = 450 - 20; axh = 225 - (20+10);
	
	% Load Data
	data = guidata(findobj('Tag','hSMAT'));
	
	current = data.ett.current;
	frame = data.ett.frameNumber;
	selection = data.ett.selection;
	
	% Vertical Projection Axes
	hVProjAxes = axes(...
		'Parent',hObject,...
		'Units','pixels',...
		'Tag','ett_axes_VProj',...
		'Position',[10 10 axw axh],...
		'Visible','on',...
		'Color','none');
	mesh(hVProjAxes,...
		getROI(current,frame,selection),...
		'Tag','ett_plot_VProj',...
		'FaceColor','none');
	set(hVProjAxes,...
		'Tag','ett_axes_VProj',...
		'XLim',[1 selection(4)],...
		'YLim',[1 selection(3)],...
		'Color','none',...
		'DrawMode','fast');
	axis(hVProjAxes,'off');
	view(hVProjAxes,[0 0]);
	
	% Add Intensity Threshold Selection Tool
	relIntTh = .7;
	hVSelAxes = axes(...
		'Parent',hObject,...
		'Tag','ett_VSelAxes',...
		'Units','pixels',...
		'Position',get(hVProjAxes,'Position'),...
		'Visible','on',...
		'Color','none',...
		'XLim',[1 100],...
		'YLim',[0 1]);
	axis(hVSelAxes,'off');
	line([1 100],[relIntTh relIntTh],...
		'Parent',hVSelAxes,...
		'Color','k',...
		'LineStyle',':',...
		'Tag','ett_selTool_Vth')
	hSelThV = impoint(hVSelAxes,[100 relIntTh]);
	setColor(hSelThV,'k');
	hConFcnV = makeConstrainToRectFcn('impoint',[100 100],[0 1]);
	setPositionConstraintFcn(hSelThV,hConFcnV);
	addNewPositionCallback(hSelThV,@IntensityThresholdChange);
	
	% Store gui data
	data.ett.relIntTh = relIntTh;
	data.ett.hSelThV = hSelThV;
	
	guidata(findobj('Tag','hSMAT'),data);
	
end
function uiFilterPanel(hObject,eventdata,varargin)
	
	% Dimensions
	pos = get(hObject,'Position');
	
	% Global positions
	w = pos(3);	h = pos(4);
	
	% Label height/width
	lw = 120; lh = 23;
	
	% Edit box height/width
	ew = 50; eh = lh;

	% Note height/width
	nw = w - (10 + lw + ew + ew + 10); nh = lh;
	
	% Start positions
	x1 = 10;
	x2 = x1 + lw;
	x3 = x2 + ew;
	x4 = x3 + ew;
	
	y1 = h - (20 + lh);
	y2 = y1 - (lh + 5);
	y3 = y2 - (lh + 5);
	y4 = y3 - (lh + 5);
	y5 = y4 - (lh + 5);
	y6 = y5 - (lh + 5);
	y7 = y6 - (lh + 5);
	
	% Titles
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','Filter type:',...
	   'Position',[x1 y1 lw lh]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'HorizontalAlignment','center',...
		'String','(1)',...
	   'Position',[x2 y1 ew lh]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'HorizontalAlignment','center',...
		'String','(2)',...
	   'Position',[x3 y1 ew lh]);
	uicontrol(...
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'String','Notes',...
	   'Position',[x4 y1 nw lh]);
	
	% Gaussian
	uicontrol(...	% Title
		'Parent',hObject,...
		'Style','checkbox',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'TooltipString','Rotationally symmetric Gaussian lowpass filter of size (1), and standard deviation (2)',...
		'String','Gausian',...
	   'Position',[x1 y2 lw lh],...
		'Callback',{@AdjustImage,'gaussian'},...
		'Tag','ett_filt_gauss_0',...
		'Enable','on');
	uicontrol(...	% Length
		'Parent',hObject,...
		'Style','edit',...
		'Tag','ett_filt_gauss_1',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Rotationally symmetric Gaussian lowpass filter of size (1), and standard deviation (2)',...
		'String','5',...
	   'Callback',{@AdjustImage,'gaussian'},...
		'Position',[x2 y2 ew lh]);
	uicontrol(...	% Width
		'Parent',hObject,...
		'Style','edit',...
		'Tag','ett_filt_gauss_2',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Rotationally symmetric Gaussian lowpass filter of size (1), and standard deviation (2)',...
		'String','2',...
	   'Callback',{@AdjustImage,'gaussian'},...
		'Position',[x3 y2 ew lh]);
	uicontrol(...	% Note
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',8,...
		'HorizontalAlignment','left',...
		'String','Rotationally symmetric Gaussian lowpass filter of size (1), and standard deviation (2)',...
	   'Position',[x4 y2 nw lh]);
	
	% Average
	uicontrol(...
		'Parent',hObject,...
		'Style','checkbox',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'TooltipString','Averageing filter of width (1) and height (2)',...
		'String','Average',...
	   'Position',[x1 y3 lw lh],...
		'Callback',{@AdjustImage,'average'},...
		'Tag','ett_filt_avr_0',...
		'Enable','on');
	uicontrol(...	% Width
		'Parent',hObject,...
		'Style','edit',...
		'Tag','ett_filt_avr_1',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Averageing filter of width (1) and height (2)',...
		'String','5',...
	   'Position',[x2 y3 ew lh],...
		'Callback',{@AdjustImage,'average'});
	uicontrol(...	% Height
		'Parent',hObject,...
		'Style','edit',...
		'Tag','ett_filt_avr_2',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Averageing filter of width (1) and height (2)',...
		'String','3',...
	   'Position',[x3 y3 ew lh],...
		'Callback',{@AdjustImage,'average'});
	uicontrol(...	% Note
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',8,...
		'HorizontalAlignment','left',...
		'String','Averageing filter of width (1) and height (2)',...
	   'Position',[x4 y3 nw lh]);
	
	% Disk
	uicontrol(...
		'Parent',hObject,...
		'Style','checkbox',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'TooltipString','Circular averageing filter of radius (1).',...
		'String','Disk',...
	   'Position',[x1 y4 lw lh],...
		'Callback',{@AdjustImage,'disk'},...
		'Tag','ett_filt_disk_0',...
		'Enable','on');
	uicontrol(...	% Radius
		'Parent',hObject,...
		'Tag','ett_filt_disk_1',...
		'Style','edit',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Circular averageing filter of radius (1).',...
		'String','5',...
	   'Callback',{@AdjustImage,'disk'},...
		'Position',[x2 y4 ew lh]);
	uicontrol(...	% Note
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',8,...
		'HorizontalAlignment','left',...
		'String','Circular averageing filter of radius (1).',...
	   'Position',[x4 y4 nw lh]);
	
	% Wiener
	uicontrol(...
		'Parent',hObject,...
		'Style','checkbox',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'TooltipString','Lowpass Wiener filter of width (1), and heigth (2).',...
		'String','Wiener',...
	   'Position',[x1 y5 lw lh],...
		'Callback',{@AdjustImage,'wiener'},...
		'Tag','ett_filt_wiener_0',...
		'Enable','on');
	uicontrol(...	% Width
		'Parent',hObject,...
		'Tag','ett_filt_wiener_1',...
		'Style','edit',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Lowpass Wiener filter of width (1), and heigth (2).',...
		'String','5',...
	   'Callback',{@AdjustImage,'wiener'},...
		'Position',[x2 y5 ew lh]);
	uicontrol(...	% Height
		'Parent',hObject,...
		'Style','edit',...
		'Tag','ett_filt_wiener_2',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Lowpass Wiener filter of width (1), and heigth (2).',...
		'String','2',...
	   'Callback',{@AdjustImage,'wiener'},...
		'Position',[x3 y5 ew lh]);
	uicontrol(...	% Note
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',8,...
		'HorizontalAlignment','left',...
		'String','Lowpass Wiener filter of width (1), and heigth (2).',...
	   'Position',[x4 y5 nw lh]);
	
	% Sgo-Lay
	uicontrol(...
		'Parent',hObject,...
		'Style','checkbox',...
		'Units','pixels',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'FontSize',10,...
		'TooltipString','Savitzky-Golay FIR filter of length (1), and order (2) < (1)',...
		'String','Sgo-Lay',...
	   'Position',[x1 y6 lw lh],...
		'Callback',{@AdjustImage,'sgo-lay'},...
		'Tag','ett_filt_sgolay_0',...
		'Enable','on');
	uicontrol(...	% Length
		'Parent',hObject,...
		'Tag','ett_filt_sgolay_1',...
		'Style','edit',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Savitzky-Golay FIR filter of length (1), and order (2) < (1)',...
		'String','5',...
	   'Callback',{@AdjustImage,'sgo-lay'},...
		'Position',[x2 y6 ew lh]);
	uicontrol(...	% Order
		'Parent',hObject,...
		'Style','edit',...
		'Tag','ett_filt_sgolay_2',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Savitzky-Golay FIR filter of length (1), and order (2) < (1)',...
		'String','2',...
	   'Callback',{@AdjustImage,'sgo-lay'},...
		'Position',[x3 y6 ew lh]);
	uicontrol(...	% Note
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',8,...
		'HorizontalAlignment','left',...
		'String','Savitzky-Golay FIR filter of length (1), and order (2) < (1)',...
	   'Position',[x4 y6 nw lh]);
	
	% Multiple frames
	uicontrol(...
		'Parent',hObject,...
		'Style','checkbox',...
		'Tag','ett_filt_multiframe_0',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'HorizontalAlignment','left',...
		'TooltipString','Multiple frame average. (1) no. frames to average.',...
		'String','Multiple frames',...
		'Callback',{@AdjustImage,'multiframe'},...
	   'Position',[x1 y7 lw lh]);
	uicontrol(...	% Number of frames
		'Parent',hObject,...
		'Style','edit',...
		'Tag','ett_filt_multiframe_1',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',10,...
		'TooltipString','Multiple frame average. (1) no. frames to average.',...
		'String','5',...
		'Callback',{@AdjustImage,'multiframe'},...
	   'Position',[x2 y7 ew lh]);
	uicontrol(...	% Note
		'Parent',hObject,...
		'Style','text',...
		'BackgroundColor',get(findobj('Tag','hSMAT'),'Color'),...
		'Units','pixels',...
		'FontSize',8,...
		'HorizontalAlignment','left',...
		'String','Multiple frame average. (1) no. frames to average.',...
	   'Position',[x4 y7 nw lh]);
	
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Button callback functions %
% ========================= %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function RotateImageButton(hObject,eventdata,varargin)
	
	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	
	% Store all GUI data
	data.ett.rotate = ~data.ett.rotate;
	guidata(findobj('Tag','hSMAT'),data);
	
	% Update button text
	switch data.ett.rotate
	case true
		set(hObject,'String','Rotate (on)');
	case false
		set(hObject,'String','Rotate (off)');
	end
	
	% Set filter and image
	AdjustImage;
	
end
function ExtractTimeTraceButton(hObject,varargin)
	
	% Load data structure
	data = guidata(findobj('Tag','hSMAT'));
	
	% Get File Data
	s = data.ett.selection;
	y0 = data.ett.rrFit(1);
	k = data.ett.rrFit(2);
	current = data.ett.current;
	chPos = data.ett.chPos;
	stackSize = data.ett.stackSize;
	oldFNr = data.ett.frameNumber;
	
	% Create variables
	timeTrace = zeros(stackSize,s(3));
	
	% Dimensions
	axw = s(3); axh = stackSize;
	
	w = max(200,20+s(3));
	
	bw = 90; bh = 25;
	
	lw = 90; lh = 20;
	
	% Create new window
	hFig = figure(...
	  	'Units','pixels',...
		'MenuBar','none',...
		'Toolbar','none',...
		'NumberTitle','off',...
		'Visible','on',...
		'Position',[0 0 w 20+axh+10+bh+10],...
		'Resize','off',...
		'Colormap',hot,...
		'Name','SMAT(ETT) - Time Trace Extraction');
	movegui(hFig,'north');
	
	% Buttons
	hCloseButton = uicontrol(...
		'Parent',hFig,...
		'Units','pixels',...
		'Style','pushbutton',...
		'String', 'Close',...
		'Position',[w-(10+bw) 10 bw bh],...
		'Callback', {@CloseWindow,hFig},...
		'Enable','on');
	hSaveButton = uicontrol(...
		'Parent',hFig,...
		'Units','pixels',...
		'Style','pushbutton',...
		'String', 'Save',...
		'Position',[10 10 bw bh],...
		'Callback', {@SaveTimeTrace},...
		'Enable','off');
	
	% Create display axes
	hSaveAxes = axes(...
		'Parent',hFig,...
		'Units','pixels',...
		'Position',[10 10+bh+10 axw stackSize],...
		'Visible','on');
	hIm = imagesc(timeTrace,'Parent',hSaveAxes);
	axis(hSaveAxes,'off');
	
	% Set logical selection map
	channelTrace = zeros(s(4),s(3));
	for x = 1 : s(3)
		y = round((x+.5)*k + y0);
		if (y==0)
			y = 1;
		end
		channelTrace(y,x) = 1;
	end
	channelTraceInd = find(channelTrace);
	% Go through all frames
	for f = 1 : data.ett.stackSize
		
		frame = double(imread([data.ett.pathname,data.ett.filename],f));
		disp(data.ett.rotate)
		if (data.ett.rotate)
			frame = rot90(frame);
		end
		selectedArea = frame(s(2):s(2)+s(4)-1,s(1):s(1)+s(3)-1);
		
		timeTrace(f,:) = rot90( selectedArea( channelTraceInd ) );
		
		set(hIm,'CData',timeTrace)
		drawnow;
	
	end
	
	% Reset buttons
	set(hCloseButton,'Enable','on');
	set(hSaveButton,'Enable','on');
	
	% Store gui data
	data.ett.timeTrace = timeTrace;
	
	guidata(findobj('Tag','hSMAT'),data);
	
end
function CloseWindow(varargin)
	
	close(varargin{3});
	
end
function FindChannelButton(hObject,varargin)
	
	% Load data structure
	data = guidata(findobj('Tag','hSMAT'));
	
	% Get File Data
	frame = data.ett.frameNumber;
	sel = data.ett.selection;
	current = data.ett.current;
	relIntTh = data.ett.relIntTh;
	
	hSelThH = data.ett.hSelThH;
	hSelThV = data.ett.hSelThV;
	
	% Get ROI selected data region
	roi = getROI(current,frame,sel);
	[yMax xMax] = size(roi);
	
	% Get peaks region and data intervall
	dataMin = min(min(roi));
	dataMax = max(max(roi));
	dataInterval = dataMax - dataMin;
	intTH = (relIntTh) * dataInterval + dataMin;
	
	% Calculate selected peaks, i.e. suppress data 
	% outside intensity threshold.
	selectedPeaks = ...
		(roi < intTH) .* dataMin + ...
		(roi > intTH) .* roi;
	
	% Get data for fitting
	fitData = imregionalmax(selectedPeaks);
	[yData xData] = find(fitData);
	
	% Find fit to data using least square and robust regression
	warning off
	lsFit = regress(yData,[ones(size(xData)) xData]);
	rrFit = robustfit(xData,yData);
	warning on
	
	% Update labels
	chPos(1,1) = round(sel(1));												% X1
	chPos(1,2) = round(sel(1)+sel(3)-1);									% X2
	chPos(2,1) = round(sel(2) + sum(rrFit));								% Y1
	chPos(2,2) = round(sel(2) + rrFit(1) + rrFit(2)*(sel(3)-1));	% Y2
	chPos(3,1) = round(atand(rrFit(2))*100)*.01;							% theta in deg
	chPos(3,2) = rrFit(2);														% k
	set(findobj('Tag','ett_label_channeldata'),...
		'String',sprintf('Angle: %0.4g deg\nStart: x: %g\ty: %g',...
			chPos(3,1),...
			chPos(1,1),...
			chPos(2,1)));
	
	% Store all GUI data
	%data.ett.lsFit = lsFit;
	data.ett.rrFit = rrFit;
	data.ett.chPos = chPos;
	guidata(findobj('Tag','hSMAT'),data);
	
	% Update Images
	UpdateAxes;
	
end
function LoadTIFButton(hObject,varargin)
	
	LoadNewData;
	
end
function CloseButton(hObject,varargin)
	
	close(findobj('Tag','hETT'));
	
end
function ExtractPlotsButton(hObject,varargin)
	
	% Load data structure
	data = guidata(findobj('Tag','hSMAT'));
	
	% Get File Data
	current = data.ett.current;
	fN = data.ett.frameNumber;
	s = data.ett.selection;
	
	% Create new figure
	f1 = figure(...
		'Colormap',hot);
	
	% Subplotsystem
	subplot(2,3,[1 4]);
	imagesc(current);
	rectangle(...
		'Position',s,...
		'LineWidth',2,...
		'LineStyle','--',...
		'EdgeColor','w');
	title('Current Frame')
	axis('off')
	
	subplot(2,3,[2 5]);
	imagesc(getROI(current,fN,s))
	title('ROI')
	axis('off')
	
	subplot(2,3,3)
	mesh(getROI(current,fN,s))
	view([-90 0]);
	title('Horizontal projection')
	axis('off',[1 s(4) 1 s(3)])
	
	subplot(2,3,6)
	mesh(getROI(current,fN,s))
	view([0 0]);
	title('Vertical projection')
	axis('off',[1 s(4) 1 s(3)])
	
end
function ShowChannelValueButton(hObject,varargin)
	
	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	
	% Store all GUI data
	data.ett.toggleChannelValues = ~data.ett.toggleChannelValues;
	guidata(findobj('Tag','hSMAT'),data);
	
	% Update button text
	switch data.ett.toggleChannelValues
	case true
		set(hObject,'String','Show All');
	case false
		set(hObject,'String','Show Channel Values');
	end
	
	% Set filter and image
	AdjustImage;
	
end

%%%%%%%%%%%%%%%%%%%%%%
% Callback functions %
% ================== %
%%%%%%%%%%%%%%%%%%%%%%
function ROISelectionChange(pos)
	
	% Get and rename position of selection
	pos = round(pos);
	x = pos(1); y = pos(2); w = pos(3); h = pos(4);
		
	% Update position label
	set(findobj('Tag','ett_label_roi'),'String',...
		sprintf('x = %g\t\tw = %g\ny = %g\t\th = %g',x,w,y,h));

	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	
	% Write data
	data.ett.selection = pos;
	
	% Store all GUI data
	guidata(findobj('Tag','hSMAT'),data);

	% Update images
	AdjustImage;
	
end
function IntensityThresholdChange(pos)
	
	% Get and rename position of selection
	x = pos(1); y = pos(2);
	y = round(y*100)*.01;
	
	% Update position label
	set(findobj('Tag','ett_label_IntensityThreshold'),'String',...
		sprintf('%g%%',y*100));

	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	
	% Write data
	data.ett.relIntTh = y;
	
	% Store all GUI data
	guidata(findobj('Tag','hSMAT'),data);

	% Update images
	AdjustImage;
	
	
end
function ScrollImage(hObject,handles,varargin)
	
	% Get scroll value and set frame number label
	frame = get(hObject,'Value');
	frame = round(frame);
	set(hObject,'Value',frame);
	set(findobj('Tag','ett_label_FrameNumber'),'String',sprintf('Current frame: %g',frame));
	
	% Load data structure
	data = guidata(findobj('Tag','hSMAT'));
	
	% Get File Data
	pathname = data.ett.pathname;
	filename = data.ett.filename;
	full_filename = [pathname filename];
	
	% Write data
	data.ett.frameNumber = frame;
	
	
	% Update images
	data.ett.original = double(imread(full_filename,frame));
	data.ett.current = data.ett.original;
	
	% Store all GUI data
	guidata(findobj('Tag','hSMAT'),data);
	
	% Set filter and image
	AdjustImage;
	
end
function AdjustImage(hObject,eventdata,varargin)
	
	filterNames = {...
		'gaussian';...
		'average';...
		'disk';...
		'wiener';...
		'sgo-lay'};
	filterTypes = {...
		'ett_filt_gauss_0';...
		'ett_filt_avr_0';...
		'ett_filt_disk_0';...
		'ett_filt_wiener_0';...
		'ett_filt_sgolay_0'};
	
	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	s = data.ett.selection;
	frameN = data.ett.frameNumber;
	
	% Multiframe
	if (get(findobj('Tag','ett_filt_multiframe_0'),'Value'))
		
		p(1) = round(str2num(get(findobj('Tag','ett_filt_multiframe_1'),'String')));
		
		% Get current frame number
		if (p(1) + data.ett.frameNumber > data.ett.stackSize)
			frameNr = data.ett.stackSize - p(1);
		else
			frameNr = data.ett.frameNumber;
		end

		% Calculate multiple frame
		frame = zeros(size(data.ett.original));
		for i = frameNr : frameNr + p(1) - 1
			frame = frame + (1/p(1)) .* double(imread([data.ett.pathname,data.ett.filename],i));
		end
		
	else
		
		frame = double(imread([data.ett.pathname,data.ett.filename],data.ett.frameNumber));
		
	end
	
	% Rotate
	if (data.ett.rotate)
		frame = rot90(frame);
	end
	
	% Add filters
	for i = 1 : length(filterNames)
		
		if (get(findobj('Tag',filterTypes{i}),'Value'))
			
			switch filterTypes{i}
			case 'ett_filt_gauss_0'

				p(1) = str2num(get(findobj('Tag','ett_filt_gauss_1'),'String'));
				p(2) = str2num(get(findobj('Tag','ett_filt_gauss_2'),'String'));

				mask = fspecial(filterNames{i},p(1),p(2));
				
				frame = filter2(mask,frame);
				
			case 'ett_filt_avr_0'

				p(1) = str2num(get(findobj('Tag','ett_filt_avr_1'),'String'));
				p(2) = str2num(get(findobj('Tag','ett_filt_avr_2'),'String'));

				mask = fspecial(filterNames{i},[p(2) p(1)]);
				
				frame = filter2(mask,frame);
				
			case 'ett_filt_disk_0'

				p(1) = str2num(get(findobj('Tag','ett_filt_disk_1'),'String'));
				
				mask = fspecial(filterNames{i},p(1));

				frame = filter2(mask,frame);

			case 'ett_filt_wiener_0'

				p(1) = round(str2num(get(findobj('Tag','ett_filt_wiener_1'),'String')));
				p(2) = round(str2num(get(findobj('Tag','ett_filt_wiener_2'),'String')));

				frame = wiener2(frame,[p(2) p(1)]);
				
			case 'ett_filt_sgolay_0'

				p(1) = round(str2num(get(findobj('Tag','ett_filt_sgolay_1'),'String')));
				p(2) = round(str2num(get(findobj('Tag','ett_filt_sgolay_2'),'String')));

				if (p(1) <= p(2) )
					p(1) = p(2) + 1;
				end
				if ( mod(p(1),2)==0)
					p(1) = p(1) + 1;
				end

				frame = sgolayfilt(frame',p(2),p(1))';
				
			end
			
		end
		
	end
	
	% Toggle Channel Values
	if (data.ett.toggleChannelValues)
		
		% Get ROI selected data region
		roi = getROI(frame,frameN,s);
		[yMax xMax] = size(roi);

		% Get peaks region and data intervall
		dataMin = min(min(roi));
		dataMax = max(max(roi));
		dataInterval = dataMax - dataMin;
		intTH = (data.ett.relIntTh) * dataInterval + dataMin;

		% Calculate selected peaks, i.e. suppress data 
		% outside intensity threshold.
		selectedPeaks = ...
			(roi < intTH) .* dataMin + ...
			(roi > intTH) .* roi;
		
		% Create new frame
		frame = ones(size(frame)) .* dataMin;
		frame(s(2):s(2)+s(4)-1,s(1):s(1)+s(3)-1) =  selectedPeaks;
		
	end
	
	% Write data
	data.ett.current = frame;
	
	% Store all GUI data
	guidata(findobj('Tag','hSMAT'),data);
	
	% Update all axes
	UpdateAxes;
	
end
function ToggleChannelValues(hObject,varargin)
	
	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	
	% Store all GUI data
	data.ett.toggleChannelValues = ~data.ett.toggleChannelValues;
	guidata(findobj('Tag','hSMAT'),data);
	
	% Set filter and image
	AdjustImage;
	
end

%%%%%%%%%%%%%%%%%%%
% Other functions %
% =============== %
%%%%%%%%%%%%%%%%%%%
function SetAxes(varargin)
	
	% Load data structure
	data = guidata(findobj('Tag','hSMAT'));
	
	selection = data.ett.selection;
	
	% ROI Selection Axes
	axis(get(findobj('Tag','ett_imgsc_roiSelection'),'Parent'),...
		'xy','tight');

	% Horizontal Projection Axes
	hHProjAxes = get(findobj('Tag','ett_plot_HProj'),'Parent');
	set(hHProjAxes,...
		'Tag','ett_axes_HProj',...
		'XLim',[1 selection(4)],...
		'YLim',[1 selection(3)],...
		'Color','none',...
		'DrawMode','fast');
	axis(hHProjAxes,'off');
	view(hHProjAxes,[-90 0]);

	% Vertical Projection Axes
	hVProjAxes = get(findobj('Tag','ett_plot_VProj'),'Parent');
	set(hVProjAxes,...
		'Tag','ett_axes_VProj',...
		'XLim',[1 selection(4)],...
		'YLim',[1 selection(3)],...
		'Color','none',...
		'DrawMode','fast');
	axis(hVProjAxes,'off');
	view(hVProjAxes,[0 0]);
	
end
function UpdateSelectionTools(varargin)
	
	% Load data structure
	data = guidata(findobj('Tag','hSMAT'));
	
	roiSelTool = data.ett.roiSelTool;
	stackSize = data.ett.stackSize;
	
	% Calc new varables
	so = size(data.ett.current);
	newROI = round([.4*so(2) .4*so(1) .2*so(2) .2*so(1)]);
	
	% Update constrain functions
	fcn = makeConstrainToRectFcn('imrect',[1 so(2)],[1 so(1)]);
	setPositionConstraintFcn(roiSelTool,fcn);
	
	% Update positions
	setPosition(roiSelTool,newROI);
	
	% Frame number scrollbar
	set(findobj('Tag','ett_scrollbar_frameNumber'),...
		'Max',stackSize,...
		'Min',1,...
		'SliderStep',[1 10] / (stackSize-1),...
		'Value',1)
	
end
function UpdateAxes(varargin)
	
	% Load data structure
	data = guidata(findobj('Tag','hSMAT'));
	
	% Get Data
	pathname = data.ett.pathname;
	filename = data.ett.filename;
	full_filename = [pathname filename];
	frame = data.ett.frameNumber;
	selection = data.ett.selection;
	current = data.ett.current;
	relIntTh = data.ett.relIntTh;
	hSelThH = data.ett.hSelThH;
	hSelThV = data.ett.hSelThV;
	chPos = data.ett.chPos;
	
	% Get data
	roi = getROI(current,frame,selection);
	peaksRegion = .70;%str2num(get(findobj('Tag','peaksRegion'),'String'))/100;
	
	% Calculate peaks region data
	dataMin = min(min(roi));
	dataMax = max(max(roi));
	dataInterval = dataMax - dataMin;
	region = (peaksRegion) * dataInterval + dataMin;
	
	% Main axes
	set(findobj('Tag','ett_imgsc_roiSelection'),...
		'CData',data.ett.current,...
		'Visible','on');
	set(get(findobj('Tag','ett_imgsc_roiSelection'),'Parent'),...
		'Clim',[dataMin dataMax]);
	set(findobj('Tag','ett_orig_rrLine'),...
		'XData',chPos(1,1:2),...
		'YData',chPos(2,1:2));
	
	% Horizontal Projection Axes
	hHProjAxes = findobj('Tag','ett_axes_HProj');
	hHProjPlot = findobj('Tag','ett_plot_HProj');
	set(hHProjPlot,'ZData',roi);
	set(hHProjAxes,...
		'XLim',[1 selection(3)],...
		'YLim',[1 selection(4)]);
	set(findobj('Tag','ett_selTool_Hth'),...
		'YData',[relIntTh relIntTh]);
	setPosition(hSelThH,[100 relIntTh]);
	
	% Vertical Projection Axes
	hVProjAxes = findobj('Tag','ett_axes_VProj');
	hVProjPlot = findobj('Tag','ett_plot_VProj');
	set(hVProjPlot,'ZData',roi);
	set(hVProjAxes,...
		'XLim',[1 selection(3)],...
		'YLim',[1 selection(4)]);
	set(findobj('Tag','ett_selTool_Vth'),...
		'YData',[relIntTh relIntTh]);
	setPosition(hSelThV,[100 relIntTh]);
	
	drawnow;
	
end
function ResetLabels(varargin)
	
	% Load Data
	data = guidata(findobj('Tag','hSMAT'));
	
	filename = data.ett.filename;
	original = data.ett.original;
	stackSize = data.ett.stackSize;
	selection = data.ett.selection;
	
	% Data Info Panel
	set(findobj('Tag','ett_label_filename'),'String',filename);
	set(findobj('Tag','ett_label_stackSize'),'String',sprintf('%g',stackSize));
	set(findobj('Tag','ett_label_frameSize'),'String',sprintf('[%g,%g]',size(original)));
	set(findobj('Tag','ett_label_roi'),'String',sprintf('x = %g\t\ty = %g\nw = %g\t\th = %g',selection));
	set(findobj('Tag','ett_label_channeldata'),'String',sprintf('Angle: 0 deg\nx: 000\ty: 000'));
	
end
function roi = getROI(current,frame,s)
	
	% Round selection
	s = round(s);
	
	% Get data
	roi = current(s(2):s(2)+s(4)-1,s(1):s(1)+s(3)-1);

end
function LoadNewData(varargin)
	
	% Get filename and path with "uigetfile"
	[filename, pathname] = uigetfile('*.tif', 'Select image file (TIF)');
	if ( filename == 0 )
		disp('Error! No (or wrong) file selected!')
		filename = 0;
		pathname = 0;
		return
	end
	full_filename = [ pathname, filename ];
	
	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	
	% Calc. new variables
	frameNumber = 1;
	original = double(imread(full_filename,frameNumber));
	current = original;
	stackSize = numel(imfinfo(full_filename));
	chPos = zeros(3,2);
	
	% Store all GUI data
	data.ett.filename = filename;
	data.ett.pathname = pathname;
	data.ett.stackSize = stackSize;
	data.ett.frameNumber = frameNumber;
	data.ett.original = original;
	data.ett.current = current;
	data.ett.rrFit = [.1 .1];
	data.ett.chPos = chPos;
	
	guidata(findobj('Tag','hSMAT'),data);
	
	% Set Axes to new data and update
	UpdateSelectionTools;
	UpdateAxes;
	SetAxes;
	AdjustImage;
	ResetLabels;
	
end
function SaveTimeTrace(varargin)
	
	% Load data struct
	data = guidata(findobj('Tag','hSMAT'));
	
	timeTrace = data.ett.timeTrace;
	chPos = data.ett.chPos;
	rotate = data.ett.rotate;
	
	% Get save path and name
	[saveFileName,savePathName,saveFilterIndex] = uiputfile(...
		{'*.tif'},...
		'Save time trace...',...
		['SMAT_ETT_',strtok(data.ett.filename,'.')]);
	if ( saveFileName == 0 )
		disp('No file name selected... save failed!')
		return
	end
	
	% Encode channel meta data into new frame
	metaframe = zeros(size(timeTrace));
	metaFrame(1:2,1:2) = chPos(1:2,1:2);
	metaFrame(3,1:2) = round(abs(1000.*chPos(3,1:2)));
	if (chPos(3,1)<0)
		metaFrame(4,1) = 10;
	end
	if (chPos(3,2)<0)
		metaFrame(4,2) = 10;
	end
	metaFrame(5,1) = 10*rotate;
	
	
	% Write to tiff file
	imwrite(...
		uint16(timeTrace),...
		[ savePathName, strtok(saveFileName,'.') '.tif'],...
		'WriteMode','overwrite');
	
	imwrite(...
		uint16(metaFrame),...
		[ savePathName, strtok(saveFileName,'.') '.tif'],...
		'WriteMode','append');
	
end



